name: Java CI with Gradle

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Set up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build with Gradle
        run: |
          cd server
          chmod +x gradlew
          ./gradlew build
          cd ..

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t pre-pro . 
          docker tag pre-pro newbee9507/pre-pro:${GITHUB_SHA::7}
          docker push newbee9507/pre-pro:${GITHUB_SHA::7}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Start Session Manager session
        run: aws ssm start-session --target i-064ab60cf2ce54ce5

      - name: Deploy to Server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
          DB_ENDPOINT: ${{ secrets.DB_ENDPOINT }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
        run: |
          aws ssm send-command \
            --instance-ids i-064ab60cf2ce54ce5 \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'if sudo docker ps -a --format \\'{{.Names}}\\' | grep -q \'^server$\\'; then',
              '  sudo docker stop server',
              '  sudo docker rm server',
              'fi',
              'sudo docker pull newbee9507/pre-pro:${GITHUB_SHA::7}',
              'sudo docker tag newbee9507/pre-pro:${GITHUB_SHA::7} pre-pro',
              'sudo docker run -d --name server -p 8080:8080 pre-pro'
            ]" \
            --output text

      - name: Read application.yml
        run: |
          echo "DB_ENDPOINT=${{ secrets.DB_ENDPOINT }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "S3_ENDPOINT=${{ secrets.S3_ENDPOINT }}" >> $GITHUB_ENV
      
